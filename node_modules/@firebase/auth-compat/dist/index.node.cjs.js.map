{"version":3,"file":"index.node.cjs.js","sources":["../src/platform.ts","../src/persistence.ts","../src/popup_redirect.ts","../src/wrap.ts","../src/user_credential.ts","../src/user.ts","../src/auth.ts","../src/phone_auth_provider.ts","../src/recaptcha_verifier.ts","../index.ts","../index.node.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as impl from '@firebase/auth/internal';\nimport {\n  getUA,\n  isBrowserExtension,\n  isReactNative,\n  isNode,\n  isIE,\n  isIndexedDBAvailable\n} from '@firebase/util';\n\ndeclare global {\n  interface Document {\n    documentMode?: number;\n  }\n}\n\nconst CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\n\nfunction _getCurrentScheme(): string | null {\n  return self?.location?.protocol || null;\n}\n\n/**\n * @return {boolean} Whether the current environment is http or https.\n */\nfunction _isHttpOrHttps(): boolean {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n\n/**\n * @param {?string=} ua The user agent.\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\n *     Cordova environment.\n */\nexport function _isAndroidOrIosCordovaScheme(ua: string = getUA()): boolean {\n  return !!(\n    (_getCurrentScheme() === 'file:' || _getCurrentScheme() === 'ionic:') &&\n    ua.toLowerCase().match(/iphone|ipad|ipod|android/)\n  );\n}\n\n/**\n * @return {boolean} Whether the environment is a native environment, where\n *     CORS checks do not apply.\n */\nfunction _isNativeEnvironment(): boolean {\n  return isReactNative() || isNode();\n}\n\n/**\n * Checks whether the user agent is IE11.\n * @return {boolean} True if it is IE11.\n */\nfunction _isIe11(): boolean {\n  return isIE() && document?.documentMode === 11;\n}\n\n/**\n * Checks whether the user agent is Edge.\n * @param {string} userAgent The browser user agent string.\n * @return {boolean} True if it is Edge.\n */\nfunction _isEdge(ua: string = getUA()): boolean {\n  return /Edge\\/\\d+/.test(ua);\n}\n\n/**\n * @param {?string=} opt_userAgent The navigator user agent.\n * @return {boolean} Whether local storage is not synchronized between an iframe\n *     and a popup of the same domain.\n */\nfunction _isLocalStorageNotSynchronized(ua: string = getUA()): boolean {\n  return _isIe11() || _isEdge(ua);\n}\n\n/** @return {boolean} Whether web storage is supported. */\nexport function _isWebStorageSupported(): boolean {\n  try {\n    const storage = self.localStorage;\n    const key = impl._generateEventId();\n    if (storage) {\n      // setItem will throw an exception if we cannot access WebStorage (e.g.,\n      // Safari in private mode).\n      storage['setItem'](key, '1');\n      storage['removeItem'](key);\n      // For browsers where iframe web storage does not synchronize with a popup\n      // of the same domain, indexedDB is used for persistent storage. These\n      // browsers include IE11 and Edge.\n      // Make sure it is supported (IE11 and Edge private mode does not support\n      // that).\n      if (_isLocalStorageNotSynchronized()) {\n        // In such browsers, if indexedDB is not supported, an iframe cannot be\n        // notified of the popup sign in result.\n        return isIndexedDBAvailable();\n      }\n      return true;\n    }\n  } catch (e) {\n    // localStorage is not available from a worker. Test availability of\n    // indexedDB.\n    return _isWorker() && isIndexedDBAvailable();\n  }\n  return false;\n}\n\n/**\n * @param {?Object=} global The optional global scope.\n * @return {boolean} Whether current environment is a worker.\n */\nexport function _isWorker(): boolean {\n  // WorkerGlobalScope only defined in worker environment.\n  return (\n    typeof global !== 'undefined' &&\n    'WorkerGlobalScope' in global &&\n    'importScripts' in global\n  );\n}\n\nexport function _isPopupRedirectSupported(): boolean {\n  return (\n    (_isHttpOrHttps() ||\n      isBrowserExtension() ||\n      _isAndroidOrIosCordovaScheme()) &&\n    // React Native with remote debugging reports its location.protocol as\n    // http.\n    !_isNativeEnvironment() &&\n    // Local storage has to be supported for browser popup and redirect\n    // operations to work.\n    _isWebStorageSupported() &&\n    // DOM, popups and redirects are not supported within a worker.\n    !_isWorker()\n  );\n}\n\n/** Quick check that indicates the platform *may* be Cordova */\nexport function _isLikelyCordova(): boolean {\n  return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\n}\n\nexport async function _isCordova(): Promise<boolean> {\n  if (!_isLikelyCordova()) {\n    return false;\n  }\n\n  return new Promise(resolve => {\n    const timeoutId = setTimeout(() => {\n      // We've waited long enough; the telltale Cordova event didn't happen\n      resolve(false);\n    }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\n\n    document.addEventListener('deviceready', () => {\n      clearTimeout(timeoutId);\n      resolve(true);\n    });\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport { isIndexedDBAvailable, isNode, isReactNative } from '@firebase/util';\nimport { _isWebStorageSupported, _isWorker } from './platform';\n\nexport const Persistence = {\n  LOCAL: 'local',\n  NONE: 'none',\n  SESSION: 'session'\n};\n\nconst _assert: typeof exp._assert = exp._assert;\n\nconst PERSISTENCE_KEY = 'persistence';\n\n/**\n * Validates that an argument is a valid persistence value. If an invalid type\n * is specified, an error is thrown synchronously.\n */\nexport function _validatePersistenceArgument(\n  auth: exp.Auth,\n  persistence: string\n): void {\n  _assert(\n    Object.values(Persistence).includes(persistence),\n    auth,\n    exp.AuthErrorCode.INVALID_PERSISTENCE\n  );\n  // Validate if the specified type is supported in the current environment.\n  if (isReactNative()) {\n    // This is only supported in a browser.\n    _assert(\n      persistence !== Persistence.SESSION,\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  if (isNode()) {\n    // Only none is supported in Node.js.\n    _assert(\n      persistence === Persistence.NONE,\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  if (_isWorker()) {\n    // In a worker environment, either LOCAL or NONE are supported.\n    // If indexedDB not supported and LOCAL provided, throw an error\n    _assert(\n      persistence === Persistence.NONE ||\n        (persistence === Persistence.LOCAL && isIndexedDBAvailable()),\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  // This is restricted by what the browser supports.\n  _assert(\n    persistence === Persistence.NONE || _isWebStorageSupported(),\n    auth,\n    exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n  );\n}\n\nexport async function _savePersistenceForRedirect(\n  auth: exp.AuthInternal\n): Promise<void> {\n  await auth._initializationPromise;\n\n  const win = getSelfWindow();\n  const key = exp._persistenceKeyName(\n    PERSISTENCE_KEY,\n    auth.config.apiKey,\n    auth.name\n  );\n  if (win?.sessionStorage) {\n    win.sessionStorage.setItem(key, auth._getPersistence());\n  }\n}\n\nexport function _getPersistencesFromRedirect(\n  apiKey: string,\n  appName: string\n): exp.Persistence[] {\n  const win = getSelfWindow();\n  if (!win?.sessionStorage) {\n    return [];\n  }\n\n  const key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\n  const persistence = win.sessionStorage.getItem(key);\n\n  switch (persistence) {\n    case Persistence.NONE:\n      return [exp.inMemoryPersistence];\n    case Persistence.LOCAL:\n      return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\n    case Persistence.SESSION:\n      return [exp.browserSessionPersistence];\n    default:\n      return [];\n  }\n}\n\nfunction getSelfWindow(): Window | null {\n  return typeof window !== 'undefined' ? window : null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport { _isCordova, _isLikelyCordova } from './platform';\n\nconst _assert: typeof exp._assert = exp._assert;\n\n/** Platform-agnostic popup-redirect resolver */\nexport class CompatPopupRedirectResolver\n  implements exp.PopupRedirectResolverInternal\n{\n  // Create both resolvers for dynamic resolution later\n  private readonly browserResolver: exp.PopupRedirectResolverInternal =\n    exp._getInstance(exp.browserPopupRedirectResolver);\n  private readonly cordovaResolver: exp.PopupRedirectResolverInternal =\n    exp._getInstance(exp.cordovaPopupRedirectResolver);\n  // The actual resolver in use: either browserResolver or cordovaResolver.\n  private underlyingResolver: exp.PopupRedirectResolverInternal | null = null;\n  _redirectPersistence = exp.browserSessionPersistence;\n\n  _completeRedirectFn: (\n    auth: exp.Auth,\n    resolver: exp.PopupRedirectResolver,\n    bypassAuthState: boolean\n  ) => Promise<exp.UserCredential | null> = exp._getRedirectResult;\n\n  async _initialize(auth: exp.AuthImpl): Promise<exp.EventManager> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._initialize(auth);\n  }\n\n  async _openPopup(\n    auth: exp.AuthImpl,\n    provider: exp.AuthProvider,\n    authType: exp.AuthEventType,\n    eventId?: string\n  ): Promise<exp.AuthPopup> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._openPopup(\n      auth,\n      provider,\n      authType,\n      eventId\n    );\n  }\n\n  async _openRedirect(\n    auth: exp.AuthImpl,\n    provider: exp.AuthProvider,\n    authType: exp.AuthEventType,\n    eventId?: string\n  ): Promise<void> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._openRedirect(\n      auth,\n      provider,\n      authType,\n      eventId\n    );\n  }\n\n  _isIframeWebStorageSupported(\n    auth: exp.AuthImpl,\n    cb: (support: boolean) => unknown\n  ): void {\n    this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\n  }\n\n  _originValidation(auth: exp.Auth): Promise<void> {\n    return this.assertedUnderlyingResolver._originValidation(auth);\n  }\n\n  get _shouldInitProactively(): boolean {\n    return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\n  }\n\n  private get assertedUnderlyingResolver(): exp.PopupRedirectResolverInternal {\n    _assert(this.underlyingResolver, exp.AuthErrorCode.INTERNAL_ERROR);\n    return this.underlyingResolver;\n  }\n\n  private async selectUnderlyingResolver(): Promise<void> {\n    if (this.underlyingResolver) {\n      return;\n    }\n\n    // We haven't yet determined whether or not we're in Cordova; go ahead\n    // and determine that state now.\n    const isCordova = await _isCordova();\n    this.underlyingResolver = isCordova\n      ? this.cordovaResolver\n      : this.browserResolver;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Forward direction wrapper from Compat --unwrap-> Exp */\nexport interface Wrapper<T> {\n  unwrap(): T;\n}\n\n/** Reverse direction wrapper from Exp --wrapped--> Compat */\nexport interface ReverseWrapper<T> {\n  wrapped(): T;\n}\n\nexport function unwrap<T>(object: unknown): T {\n  return (object as Wrapper<T>).unwrap();\n}\n\nexport function wrapped<T>(object: unknown): T {\n  return (object as ReverseWrapper<T>).wrapped();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { FirebaseError } from '@firebase/util';\nimport { Auth } from './auth';\nimport { User } from './user';\nimport { unwrap, wrapped } from './wrap';\n\nfunction credentialFromResponse(\n  userCredential: exp.UserCredentialInternal\n): exp.AuthCredential | null {\n  return credentialFromObject(userCredential);\n}\n\nfunction attachExtraErrorFields(auth: exp.Auth, e: FirebaseError): void {\n  // The response contains all fields from the server which may or may not\n  // actually match the underlying type\n  const response = ((e.customData as exp.TaggedWithTokenResponse | undefined)\n    ?._tokenResponse as unknown) as Record<string, string>;\n  if (e.code === 'auth/multi-factor-auth-required') {\n    const mfaErr = e as compat.MultiFactorError;\n    mfaErr.resolver = new MultiFactorResolver(\n      auth,\n      exp.getMultiFactorResolver(auth, e as exp.MultiFactorError)\n    );\n  } else if (response) {\n    const credential = credentialFromObject(e);\n    const credErr = e as compat.AuthError;\n    if (credential) {\n      credErr.credential = credential;\n      credErr.tenantId = response.tenantId || undefined;\n      credErr.email = response.email || undefined;\n      credErr.phoneNumber = response.phoneNumber || undefined;\n    }\n  }\n}\n\nfunction credentialFromObject(\n  object: FirebaseError | exp.UserCredential\n): exp.AuthCredential | null {\n  const { _tokenResponse } = (object instanceof FirebaseError\n    ? object.customData\n    : object) as exp.TaggedWithTokenResponse;\n  if (!_tokenResponse) {\n    return null;\n  }\n\n  // Handle phone Auth credential responses, as they have a different format\n  // from other backend responses (i.e. no providerId). This is also only the\n  // case for user credentials (does not work for errors).\n  if (!(object instanceof FirebaseError)) {\n    if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\n      return exp.PhoneAuthProvider.credentialFromResult(object);\n    }\n  }\n\n  const providerId = _tokenResponse.providerId;\n\n  // Email and password is not supported as there is no situation where the\n  // server would return the password to the client.\n  if (!providerId || providerId === exp.ProviderId.PASSWORD) {\n    return null;\n  }\n\n  let provider: Pick<\n    typeof exp.OAuthProvider,\n    'credentialFromResult' | 'credentialFromError'\n  >;\n  switch (providerId) {\n    case exp.ProviderId.GOOGLE:\n      provider = exp.GoogleAuthProvider;\n      break;\n    case exp.ProviderId.FACEBOOK:\n      provider = exp.FacebookAuthProvider;\n      break;\n    case exp.ProviderId.GITHUB:\n      provider = exp.GithubAuthProvider;\n      break;\n    case exp.ProviderId.TWITTER:\n      provider = exp.TwitterAuthProvider;\n      break;\n    default:\n      const {\n        oauthIdToken,\n        oauthAccessToken,\n        oauthTokenSecret,\n        pendingToken,\n        nonce\n      } = _tokenResponse as exp.SignInWithIdpResponse;\n      if (\n        !oauthAccessToken &&\n        !oauthTokenSecret &&\n        !oauthIdToken &&\n        !pendingToken\n      ) {\n        return null;\n      }\n      // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\n      if (pendingToken) {\n        if (providerId.startsWith('saml.')) {\n          return exp.SAMLAuthCredential._create(providerId, pendingToken);\n        } else {\n          // OIDC and non-default providers excluding Twitter.\n          return exp.OAuthCredential._fromParams({\n            providerId,\n            signInMethod: providerId,\n            pendingToken,\n            idToken: oauthIdToken,\n            accessToken: oauthAccessToken\n          });\n        }\n      }\n      return new exp.OAuthProvider(providerId).credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        rawNonce: nonce\n      });\n  }\n\n  return object instanceof FirebaseError\n    ? provider.credentialFromError(object)\n    : provider.credentialFromResult(object);\n}\n\nexport async function convertCredential(\n  auth: exp.Auth,\n  credentialPromise: Promise<exp.UserCredential>\n): Promise<compat.UserCredential> {\n  let credential: exp.UserCredential;\n  try {\n    credential = await credentialPromise;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      attachExtraErrorFields(auth, e);\n    }\n    throw e;\n  }\n  const { operationType, user } = credential;\n\n  return {\n    operationType,\n    credential: credentialFromResponse(\n      credential as exp.UserCredentialInternal\n    ),\n    additionalUserInfo: exp.getAdditionalUserInfo(\n      credential as exp.UserCredential\n    ),\n    user: User.getOrCreate(user)\n  };\n}\n\nexport async function convertConfirmationResult(\n  auth: exp.Auth,\n  confirmationResultPromise: Promise<exp.ConfirmationResult>\n): Promise<compat.ConfirmationResult> {\n  const confirmationResultExp = await confirmationResultPromise;\n  return {\n    verificationId: confirmationResultExp.verificationId,\n    confirm: (verificationCode: string) =>\n      convertCredential(auth, confirmationResultExp.confirm(verificationCode))\n  };\n}\n\nclass MultiFactorResolver implements compat.MultiFactorResolver {\n  readonly auth: Auth;\n  constructor(\n    auth: exp.Auth,\n    private readonly resolver: exp.MultiFactorResolver\n  ) {\n    this.auth = wrapped(auth);\n  }\n\n  get session(): compat.MultiFactorSession {\n    return this.resolver.session;\n  }\n\n  get hints(): compat.MultiFactorInfo[] {\n    return this.resolver.hints;\n  }\n\n  resolveSignIn(\n    assertion: compat.MultiFactorAssertion\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      unwrap(this.auth),\n      this.resolver.resolveSignIn(assertion as exp.MultiFactorAssertion)\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Compat } from '@firebase/util';\nimport { _savePersistenceForRedirect } from './persistence';\nimport { CompatPopupRedirectResolver } from './popup_redirect';\nimport {\n  convertConfirmationResult,\n  convertCredential\n} from './user_credential';\n\nexport class User implements compat.User, Compat<exp.User> {\n  // Maintain a map so that there's always a 1:1 mapping between new User and\n  // legacy compat users\n  private static readonly USER_MAP = new WeakMap<exp.User, User>();\n\n  readonly multiFactor: compat.MultiFactorUser;\n\n  private constructor(readonly _delegate: exp.User) {\n    this.multiFactor = exp.multiFactor(_delegate);\n  }\n\n  static getOrCreate(user: exp.User): User {\n    if (!User.USER_MAP.has(user)) {\n      User.USER_MAP.set(user, new User(user));\n    }\n\n    return User.USER_MAP.get(user)!;\n  }\n\n  delete(): Promise<void> {\n    return this._delegate.delete();\n  }\n  reload(): Promise<void> {\n    return this._delegate.reload();\n  }\n  toJSON(): object {\n    return this._delegate.toJSON();\n  }\n  getIdTokenResult(forceRefresh?: boolean): Promise<compat.IdTokenResult> {\n    return this._delegate.getIdTokenResult(forceRefresh);\n  }\n  getIdToken(forceRefresh?: boolean): Promise<string> {\n    return this._delegate.getIdToken(forceRefresh);\n  }\n  linkAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.linkWithCredential(credential);\n  }\n  async linkWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.linkWithCredential(this._delegate, credential as exp.AuthCredential)\n    );\n  }\n  async linkWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this.auth,\n      exp.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier)\n    );\n  }\n  async linkWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.linkWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async linkWithRedirect(provider: compat.AuthProvider): Promise<void> {\n    await _savePersistenceForRedirect(exp._castAuth(this.auth));\n    return exp.linkWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  reauthenticateAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.reauthenticateWithCredential(credential);\n  }\n  async reauthenticateWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      (this.auth as unknown) as exp.Auth,\n      exp.reauthenticateWithCredential(\n        this._delegate,\n        credential as exp.AuthCredential\n      )\n    );\n  }\n  reauthenticateWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this.auth,\n      exp.reauthenticateWithPhoneNumber(\n        this._delegate,\n        phoneNumber,\n        applicationVerifier\n      )\n    );\n  }\n  reauthenticateWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.reauthenticateWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async reauthenticateWithRedirect(\n    provider: compat.AuthProvider\n  ): Promise<void> {\n    await _savePersistenceForRedirect(exp._castAuth(this.auth));\n    return exp.reauthenticateWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  sendEmailVerification(\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.sendEmailVerification(this._delegate, actionCodeSettings);\n  }\n  async unlink(providerId: string): Promise<compat.User> {\n    await exp.unlink(this._delegate, providerId);\n    return this;\n  }\n  updateEmail(newEmail: string): Promise<void> {\n    return exp.updateEmail(this._delegate, newEmail);\n  }\n  updatePassword(newPassword: string): Promise<void> {\n    return exp.updatePassword(this._delegate, newPassword);\n  }\n  updatePhoneNumber(phoneCredential: compat.AuthCredential): Promise<void> {\n    return exp.updatePhoneNumber(\n      this._delegate,\n      phoneCredential as exp.PhoneAuthCredential\n    );\n  }\n  updateProfile(profile: {\n    displayName?: string | null;\n    photoURL?: string | null;\n  }): Promise<void> {\n    return exp.updateProfile(this._delegate, profile);\n  }\n  verifyBeforeUpdateEmail(\n    newEmail: string,\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.verifyBeforeUpdateEmail(\n      this._delegate,\n      newEmail,\n      actionCodeSettings\n    );\n  }\n  get emailVerified(): boolean {\n    return this._delegate.emailVerified;\n  }\n  get isAnonymous(): boolean {\n    return this._delegate.isAnonymous;\n  }\n  get metadata(): compat.UserMetadata {\n    return this._delegate.metadata;\n  }\n  get phoneNumber(): string | null {\n    return this._delegate.phoneNumber;\n  }\n  get providerData(): Array<compat.UserInfo | null> {\n    return this._delegate.providerData;\n  }\n  get refreshToken(): string {\n    return this._delegate.refreshToken;\n  }\n  get tenantId(): string | null {\n    return this._delegate.tenantId;\n  }\n  get displayName(): string | null {\n    return this._delegate.displayName;\n  }\n  get email(): string | null {\n    return this._delegate.email;\n  }\n  get photoURL(): string | null {\n    return this._delegate.photoURL;\n  }\n  get providerId(): string {\n    return this._delegate.providerId;\n  }\n  get uid(): string {\n    return this._delegate.uid;\n  }\n  private get auth(): exp.Auth {\n    return ((this._delegate as exp.UserImpl).auth as unknown) as exp.Auth;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Provider } from '@firebase/component';\nimport { ErrorFn, Observer, Unsubscribe } from '@firebase/util';\n\nimport {\n  _validatePersistenceArgument,\n  Persistence,\n  _getPersistencesFromRedirect,\n  _savePersistenceForRedirect\n} from './persistence';\nimport { _isPopupRedirectSupported } from './platform';\nimport { CompatPopupRedirectResolver } from './popup_redirect';\nimport { User } from './user';\nimport {\n  convertConfirmationResult,\n  convertCredential\n} from './user_credential';\nimport { ReverseWrapper, Wrapper } from './wrap';\n\nconst _assert: typeof exp._assert = exp._assert;\n\nexport class Auth\n  implements compat.FirebaseAuth, Wrapper<exp.Auth>, _FirebaseService\n{\n  static Persistence = Persistence;\n  readonly _delegate: exp.AuthImpl;\n\n  constructor(readonly app: FirebaseApp, provider: Provider<'auth'>) {\n    if (provider.isInitialized()) {\n      this._delegate = provider.getImmediate() as exp.AuthImpl;\n      this.linkUnderlyingAuth();\n      return;\n    }\n\n    const { apiKey } = app.options;\n    // TODO: platform needs to be determined using heuristics\n    _assert(apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n\n    let persistences: exp.Persistence[] = [exp.inMemoryPersistence];\n\n    // Only deal with persistences in web environments\n    if (typeof window !== 'undefined') {\n      // Note this is slightly different behavior: in this case, the stored\n      // persistence is checked *first* rather than last. This is because we want\n      // to prefer stored persistence type in the hierarchy.\n      persistences = _getPersistencesFromRedirect(apiKey, app.name);\n\n      for (const persistence of [\n        exp.indexedDBLocalPersistence,\n        exp.browserLocalPersistence,\n        exp.browserSessionPersistence\n      ]) {\n        if (!persistences.includes(persistence)) {\n          persistences.push(persistence);\n        }\n      }\n    }\n\n    // TODO: platform needs to be determined using heuristics\n    _assert(apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n\n    // Only use a popup/redirect resolver in browser environments\n    const resolver =\n      typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\n    this._delegate = provider.initialize({\n      options: {\n        persistence: persistences,\n        popupRedirectResolver: resolver\n      }\n    }) as exp.AuthImpl;\n\n    this._delegate._updateErrorMap(exp.debugErrorMap);\n    this.linkUnderlyingAuth();\n  }\n\n  get emulatorConfig(): compat.EmulatorConfig | null {\n    return this._delegate.emulatorConfig;\n  }\n\n  get currentUser(): compat.User | null {\n    if (!this._delegate.currentUser) {\n      return null;\n    }\n\n    return User.getOrCreate(this._delegate.currentUser);\n  }\n  get languageCode(): string | null {\n    return this._delegate.languageCode;\n  }\n  set languageCode(languageCode: string | null) {\n    this._delegate.languageCode = languageCode;\n  }\n  get settings(): compat.AuthSettings {\n    return this._delegate.settings;\n  }\n  get tenantId(): string | null {\n    return this._delegate.tenantId;\n  }\n  set tenantId(tid: string | null) {\n    this._delegate.tenantId = tid;\n  }\n  useDeviceLanguage(): void {\n    this._delegate.useDeviceLanguage();\n  }\n  signOut(): Promise<void> {\n    return this._delegate.signOut();\n  }\n  useEmulator(url: string, options?: { disableWarnings: boolean }): void {\n    exp.connectAuthEmulator(this._delegate, url, options);\n  }\n  applyActionCode(code: string): Promise<void> {\n    return exp.applyActionCode(this._delegate, code);\n  }\n\n  checkActionCode(code: string): Promise<compat.ActionCodeInfo> {\n    return exp.checkActionCode(this._delegate, code);\n  }\n\n  confirmPasswordReset(code: string, newPassword: string): Promise<void> {\n    return exp.confirmPasswordReset(this._delegate, code, newPassword);\n  }\n\n  async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.createUserWithEmailAndPassword(this._delegate, email, password)\n    );\n  }\n  fetchProvidersForEmail(email: string): Promise<string[]> {\n    return this.fetchSignInMethodsForEmail(email);\n  }\n  fetchSignInMethodsForEmail(email: string): Promise<string[]> {\n    return exp.fetchSignInMethodsForEmail(this._delegate, email);\n  }\n  isSignInWithEmailLink(emailLink: string): boolean {\n    return exp.isSignInWithEmailLink(this._delegate, emailLink);\n  }\n  async getRedirectResult(): Promise<compat.UserCredential> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    const credential = await exp.getRedirectResult(\n      this._delegate,\n      CompatPopupRedirectResolver\n    );\n    if (!credential) {\n      return {\n        credential: null,\n        user: null\n      };\n    }\n    return convertCredential(this._delegate, Promise.resolve(credential));\n  }\n\n  // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n  // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\n  // out of autogenerated documentation pages to reduce accidental misuse.\n  addFrameworkForLogging(framework: string): void {\n    exp.addFrameworkForLogging(this._delegate, framework);\n  }\n\n  onAuthStateChanged(\n    nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n    errorFn?: (error: compat.Error) => unknown,\n    completed?: Unsubscribe\n  ): Unsubscribe {\n    const { next, error, complete } = wrapObservers(\n      nextOrObserver,\n      errorFn,\n      completed\n    );\n    return this._delegate.onAuthStateChanged(next!, error, complete);\n  }\n  onIdTokenChanged(\n    nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n    errorFn?: (error: compat.Error) => unknown,\n    completed?: Unsubscribe\n  ): Unsubscribe {\n    const { next, error, complete } = wrapObservers(\n      nextOrObserver,\n      errorFn,\n      completed\n    );\n    return this._delegate.onIdTokenChanged(next!, error, complete);\n  }\n  sendSignInLinkToEmail(\n    email: string,\n    actionCodeSettings: compat.ActionCodeSettings\n  ): Promise<void> {\n    return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\n  }\n  sendPasswordResetEmail(\n    email: string,\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.sendPasswordResetEmail(\n      this._delegate,\n      email,\n      actionCodeSettings || undefined\n    );\n  }\n  async setPersistence(persistence: string): Promise<void> {\n    _validatePersistenceArgument(this._delegate, persistence);\n    let converted;\n    switch (persistence) {\n      case Persistence.SESSION:\n        converted = exp.browserSessionPersistence;\n        break;\n      case Persistence.LOCAL:\n        // Not using isIndexedDBAvailable() since it only checks if indexedDB is defined.\n        const isIndexedDBFullySupported = await exp\n          ._getInstance<exp.PersistenceInternal>(exp.indexedDBLocalPersistence)\n          ._isAvailable();\n        converted = isIndexedDBFullySupported\n          ? exp.indexedDBLocalPersistence\n          : exp.browserLocalPersistence;\n        break;\n      case Persistence.NONE:\n        converted = exp.inMemoryPersistence;\n        break;\n      default:\n        return exp._fail(exp.AuthErrorCode.ARGUMENT_ERROR, {\n          appName: this._delegate.name\n        });\n    }\n\n    return this._delegate.setPersistence(converted);\n  }\n\n  signInAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.signInWithCredential(credential);\n  }\n  signInAnonymously(): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInAnonymously(this._delegate)\n    );\n  }\n  signInWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithCredential(this._delegate, credential as exp.AuthCredential)\n    );\n  }\n  signInWithCustomToken(token: string): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithCustomToken(this._delegate, token)\n    );\n  }\n  signInWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithEmailAndPassword(this._delegate, email, password)\n    );\n  }\n  signInWithEmailLink(\n    email: string,\n    emailLink?: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithEmailLink(this._delegate, email, emailLink)\n    );\n  }\n  signInWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this._delegate,\n      exp.signInWithPhoneNumber(\n        this._delegate,\n        phoneNumber,\n        applicationVerifier\n      )\n    );\n  }\n  async signInWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    return convertCredential(\n      this._delegate,\n      exp.signInWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async signInWithRedirect(provider: compat.AuthProvider): Promise<void> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n\n    await _savePersistenceForRedirect(this._delegate);\n    return exp.signInWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  updateCurrentUser(user: compat.User | null): Promise<void> {\n    // remove ts-ignore once overloads are defined for exp functions to accept compat objects\n    // @ts-ignore\n    return this._delegate.updateCurrentUser(user);\n  }\n  verifyPasswordResetCode(code: string): Promise<string> {\n    return exp.verifyPasswordResetCode(this._delegate, code);\n  }\n  unwrap(): exp.Auth {\n    return this._delegate;\n  }\n  _delete(): Promise<void> {\n    return this._delegate._delete();\n  }\n  private linkUnderlyingAuth(): void {\n    (this._delegate as unknown as ReverseWrapper<Auth>).wrapped = () => this;\n  }\n}\n\nfunction wrapObservers(\n  nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n  error?: (error: compat.Error) => unknown,\n  complete?: Unsubscribe\n): Partial<Observer<exp.User | null>> {\n  let next = nextOrObserver;\n  if (typeof nextOrObserver !== 'function') {\n    ({ next, error, complete } = nextOrObserver);\n  }\n\n  // We know 'next' is now a function\n  const oldNext = next as (a: compat.User | null) => unknown;\n\n  const newNext = (user: exp.User | null): unknown =>\n    oldNext(user && User.getOrCreate(user as exp.User));\n  return {\n    next: newNext,\n    error: error as ErrorFn,\n    complete\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport firebase from '@firebase/app-compat';\nimport { Compat } from '@firebase/util';\nimport { unwrap } from './wrap';\n\nexport class PhoneAuthProvider\n  implements compat.PhoneAuthProvider, Compat<exp.PhoneAuthProvider>\n{\n  providerId = 'phone';\n  readonly _delegate: exp.PhoneAuthProvider;\n\n  static PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\n  static PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n\n  static credential(\n    verificationId: string,\n    verificationCode: string\n  ): compat.AuthCredential {\n    return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\n  }\n\n  constructor() {\n    // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n    // @ts-ignore\n    this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth!()));\n  }\n\n  verifyPhoneNumber(\n    phoneInfoOptions:\n      | string\n      | compat.PhoneSingleFactorInfoOptions\n      | compat.PhoneMultiFactorEnrollInfoOptions\n      | compat.PhoneMultiFactorSignInInfoOptions,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<string> {\n    return this._delegate.verifyPhoneNumber(\n      // The implementation matches but the types are subtly incompatible\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      phoneInfoOptions as any,\n      applicationVerifier\n    );\n  }\n\n  unwrap(): exp.PhoneAuthProvider {\n    return this._delegate;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase, { FirebaseApp } from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Compat } from '@firebase/util';\n\nconst _assert: typeof exp._assert = exp._assert;\n\nexport class RecaptchaVerifier\n  implements compat.RecaptchaVerifier, Compat<exp.ApplicationVerifier> {\n  readonly _delegate: exp.RecaptchaVerifier;\n  type: string;\n  constructor(\n    container: HTMLElement | string,\n    parameters?: object | null,\n    app: FirebaseApp = firebase.app()\n  ) {\n    // API key is required for web client RPC calls.\n    _assert(app.options?.apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n    this._delegate = new exp.RecaptchaVerifier(\n      container,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parameters as any,\n\n      // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n      // @ts-ignore\n      app.auth!()\n    );\n    this.type = this._delegate.type;\n  }\n  clear(): void {\n    this._delegate.clear();\n  }\n  render(): Promise<number> {\n    return this._delegate.render();\n  }\n  verify(): Promise<string> {\n    return this._delegate.verify();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable camelcase */\n\nimport firebase, { _FirebaseNamespace } from '@firebase/app-compat';\nimport * as impl from '@firebase/auth/internal';\nimport {\n  Component,\n  ComponentType,\n  InstantiationMode\n} from '@firebase/component';\nimport { FirebaseError } from '@firebase/util';\n\nimport * as types from '@firebase/auth-types';\nimport { name, version } from './package.json';\nimport { Auth } from './src/auth';\nimport { PhoneAuthProvider as CompatAuthProvider } from './src/phone_auth_provider';\nimport { RecaptchaVerifier as CompatRecaptchaVerifier } from './src/recaptcha_verifier';\n\nconst AUTH_TYPE = 'auth-compat';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'auth-compat': types.FirebaseAuth;\n  }\n}\n\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    auth: {\n      (app?: FirebaseApp): types.FirebaseAuth;\n      Auth: typeof types.FirebaseAuth;\n      EmailAuthProvider: typeof types.EmailAuthProvider;\n      EmailAuthProvider_Instance: typeof types.EmailAuthProvider_Instance;\n      FacebookAuthProvider: typeof types.FacebookAuthProvider;\n      FacebookAuthProvider_Instance: typeof types.FacebookAuthProvider_Instance;\n      GithubAuthProvider: typeof types.GithubAuthProvider;\n      GithubAuthProvider_Instance: typeof types.GithubAuthProvider_Instance;\n      GoogleAuthProvider: typeof types.GoogleAuthProvider;\n      GoogleAuthProvider_Instance: typeof types.GoogleAuthProvider_Instance;\n      OAuthProvider: typeof types.OAuthProvider;\n      SAMLAuthProvider: typeof types.SAMLAuthProvider;\n      PhoneAuthProvider: typeof types.PhoneAuthProvider;\n      PhoneAuthProvider_Instance: typeof types.PhoneAuthProvider_Instance;\n      PhoneMultiFactorGenerator: typeof types.PhoneMultiFactorGenerator;\n      RecaptchaVerifier: typeof types.RecaptchaVerifier;\n      RecaptchaVerifier_Instance: typeof types.RecaptchaVerifier_Instance;\n      TwitterAuthProvider: typeof types.TwitterAuthProvider;\n      TwitterAuthProvider_Instance: typeof types.TwitterAuthProvider_Instance;\n    };\n  }\n  interface FirebaseApp {\n    auth?(): types.FirebaseAuth;\n  }\n}\n\n// Create auth components to register with firebase.\n// Provides Auth public APIs.\nfunction registerAuthCompat(instance: _FirebaseNamespace): void {\n  instance.INTERNAL.registerComponent(\n    new Component(\n      AUTH_TYPE,\n      container => {\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app-compat').getImmediate();\n        const authProvider = container.getProvider('auth');\n        return new Auth(app, authProvider);\n      },\n      ComponentType.PUBLIC\n    )\n      .setServiceProps({\n        ActionCodeInfo: {\n          Operation: {\n            EMAIL_SIGNIN: impl.ActionCodeOperation.EMAIL_SIGNIN,\n            PASSWORD_RESET: impl.ActionCodeOperation.PASSWORD_RESET,\n            RECOVER_EMAIL: impl.ActionCodeOperation.RECOVER_EMAIL,\n            REVERT_SECOND_FACTOR_ADDITION:\n              impl.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\n            VERIFY_AND_CHANGE_EMAIL:\n              impl.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\n            VERIFY_EMAIL: impl.ActionCodeOperation.VERIFY_EMAIL\n          }\n        },\n        EmailAuthProvider: impl.EmailAuthProvider,\n        FacebookAuthProvider: impl.FacebookAuthProvider,\n        GithubAuthProvider: impl.GithubAuthProvider,\n        GoogleAuthProvider: impl.GoogleAuthProvider,\n        OAuthProvider: impl.OAuthProvider,\n        //   SAMLAuthProvider,\n        PhoneAuthProvider: CompatAuthProvider,\n        PhoneMultiFactorGenerator: impl.PhoneMultiFactorGenerator,\n        RecaptchaVerifier: CompatRecaptchaVerifier,\n        TwitterAuthProvider: impl.TwitterAuthProvider,\n        Auth,\n        AuthCredential: impl.AuthCredential,\n        Error: FirebaseError\n      })\n      .setInstantiationMode(InstantiationMode.LAZY)\n      .setMultipleInstances(false)\n  );\n\n  instance.registerVersion(name, version);\n}\n\nregisterAuthCompat(firebase as _FirebaseNamespace);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is the file that people using Node.js will actually import. You should\n * only include this file if you have something specific about your\n * implementation that mandates having a separate entrypoint. Otherwise you can\n * just use index.ts\n */\nexport * from './index';\nimport { FetchProvider } from '@firebase/auth/internal';\nimport * as fetchImpl from 'node-fetch';\nimport './index';\n\nFetchProvider.initialize(\n  (fetchImpl.default as unknown) as typeof fetch,\n  (fetchImpl.Headers as unknown) as typeof Headers,\n  (fetchImpl.Response as unknown) as typeof Response\n);\n"],"names":["getUA","isReactNative","isNode","isIE","impl","isIndexedDBAvailable","isBrowserExtension","_assert","exp","FirebaseError","firebase","Component","CompatAuthProvider","CompatRecaptchaVerifier","FetchProvider","fetchImpl"],"mappings":"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"}